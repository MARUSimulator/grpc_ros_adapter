# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import common_pb2 as common__pb2
import tf_pb2 as tf__pb2


class TfStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllFrames = channel.unary_unary(
                '/tf.Tf/GetAllFrames',
                request_serializer=common__pb2.Empty.SerializeToString,
                response_deserializer=tf__pb2.TfFrameList.FromString,
                )
        self.GetFrame = channel.unary_unary(
                '/tf.Tf/GetFrame',
                request_serializer=tf__pb2.TfFrameRequest.SerializeToString,
                response_deserializer=tf__pb2.TfFrame.FromString,
                )
        self.StreamAllFrames = channel.unary_stream(
                '/tf.Tf/StreamAllFrames',
                request_serializer=common__pb2.Empty.SerializeToString,
                response_deserializer=tf__pb2.TfFrameList.FromString,
                )
        self.StreamFrame = channel.unary_stream(
                '/tf.Tf/StreamFrame',
                request_serializer=tf__pb2.TfFrameRequest.SerializeToString,
                response_deserializer=tf__pb2.TfFrame.FromString,
                )


class TfServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAllFrames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFrame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamAllFrames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamFrame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TfServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllFrames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllFrames,
                    request_deserializer=common__pb2.Empty.FromString,
                    response_serializer=tf__pb2.TfFrameList.SerializeToString,
            ),
            'GetFrame': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFrame,
                    request_deserializer=tf__pb2.TfFrameRequest.FromString,
                    response_serializer=tf__pb2.TfFrame.SerializeToString,
            ),
            'StreamAllFrames': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamAllFrames,
                    request_deserializer=common__pb2.Empty.FromString,
                    response_serializer=tf__pb2.TfFrameList.SerializeToString,
            ),
            'StreamFrame': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamFrame,
                    request_deserializer=tf__pb2.TfFrameRequest.FromString,
                    response_serializer=tf__pb2.TfFrame.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tf.Tf', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Tf(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAllFrames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tf.Tf/GetAllFrames',
            common__pb2.Empty.SerializeToString,
            tf__pb2.TfFrameList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tf.Tf/GetFrame',
            tf__pb2.TfFrameRequest.SerializeToString,
            tf__pb2.TfFrame.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamAllFrames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/tf.Tf/StreamAllFrames',
            common__pb2.Empty.SerializeToString,
            tf__pb2.TfFrameList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/tf.Tf/StreamFrame',
            tf__pb2.TfFrameRequest.SerializeToString,
            tf__pb2.TfFrame.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
