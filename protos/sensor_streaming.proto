syntax = "proto3";

import "common.proto";

option java_multiple_files = true;
option java_package = "io.grpc.examples.sensorstreaming";
option java_outer_classname = "SensorStreaming";
option objc_class_prefix = "HLW";

package sensorstreaming;

service SensorStreaming {
    rpc StreamCameraSensor(stream CameraStreamingRequest) returns (StreamingResponse) {}
    rpc StreamLidarSensor(stream LidarStreamingRequest) returns (StreamingResponse) {}
    rpc StreamRadarSensor(stream RadarStreamingRequest) returns (StreamingResponse) {}
    rpc StreamDepthSensor(stream DepthStreamingRequest) returns (StreamingResponse) {}
    rpc StreamDvlSensor(stream DvlStreamingRequest) returns (StreamingResponse) {}
    rpc StreamGnssSensor(stream GnssStreamingRequest) returns (StreamingResponse) {}
    rpc StreamImuSensor(stream ImuStreamingRequest) returns (StreamingResponse) {}
    rpc StreamPoseSensor(stream PoseStreamingRequest) returns (StreamingResponse) {}
    rpc StreamSonarSensor(stream SonarStreamingRequest) returns (StreamingResponse) {}
    rpc StreamAisSensor(stream AISStreamingRequest) returns (StreamingResponse) {}
} 

message CameraStreamingRequest {
    bytes data = 1;
    double timeStamp = 2;
    uint32 width = 3;
    uint32 height = 4;
    string address = 5;
}

message StreamingResponse {
    bool success = 1;
}

message PointField {
    uint32 INT8 = 1;
    uint32 UINT8 = 2;
    uint32 INT16 = 3;
    uint32 UINT16 = 4;
    uint32 INT32 = 5;
    uint32 UINT32 = 6;
    uint32 FLOAT32 = 7; 
    uint32 FLOAT64 = 8;

    string name = 9;
    uint32 offset = 10;
    uint32 datatype = 11;
    uint32 count = 12;

}

message LidarStreamingRequest {
    double timeInSeconds = 1;
    uint32 height = 2;
    uint32 width = 3;
    repeated PointField fields = 4;
    bool isBigEndian = 5;
    uint32 point_step = 6;
    uint32 row_step = 7;
    bytes data = 8;
    bool is_dense = 9;
}

message RadarStreamingRequest {
    float rangeIncrement = 1;
    float rangeStart = 2;
    uint32 numSamples = 3;
    uint32 numSpokes = 4;
    uint32 minIntensity = 5;
    uint32 maxIntensity = 6;
    repeated double timeInSeconds = 7;
    repeated float azimuth = 8;
    bytes radarSpokes = 9;

}

message DepthStreamingRequest {
    float depth = 1;
    string address = 2;
}

message DvlStreamingRequest {
    float altitude = 1;
    common.Vector3 groundVelocity = 2;
    repeated float beamRanges = 3;
    string address = 4;
}

message GnssStreamingRequest {
    common.GeoPoint point = 1;
    string address = 2;
}

message ImuStreamingRequest {
    common.Vector3 acceleration = 1;
    common.Vector3 angularVelocity = 2;
    common.Vector3 orientation = 3;
    string address = 4;
}

message PoseStreamingRequest {
    common.Pose pose = 1;
    string address = 2;
}

message SonarStreamingRequest {
    float range = 1;
    float bearing = 2;
    string address = 3;
}
message AISStreamingRequest {
    common.AISPositionReport aisPositionReport = 1;
    string address = 2;
}